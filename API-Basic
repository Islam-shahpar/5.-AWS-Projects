Source : Dr. Angela from App brewery

Request: Client Browser -> Application Server -> Server of another application 
Response: Client Browser <- Application Server <- Server of another application

Request Format: endpoint/path/parameter/authenticationID
Request Format example: https://www.abc.com/xyz?param=1&authID=anoinfodnwcc

Response Format: JSON/XML/HTML/YAML
Response Format example: JSON

{
    "glossary": {
        "title": "example glossary",
    }
}

To test a valid request use "Postman" tool.

Type endpoint url then add necessary parameter and value as key-value in the GUI.

Create an API Project from the scratch:

1. CD Desktop
2. mkdir APIProject
3. touch index.html app.js
4. npm init //for creating package.json
5. npm install body-parser express request
6. nodemon app.js //to run the server

# Go to app.js
const express = require("express");
const bodyParser = require("body-parser");
const request = require("request");

const app = express();

app.listen(3000, function(){
  console.log("Server is running on port 3000");
  });
  
# Add the signup page to the server
app.get("/", function(req,res){
  app.sendFile(__dirname + "/signUp.html")
})

#To server the static content from the folder
app.use(express.static("public"));

#To enable body parsing from front end
app.use(bodyParser.urlencoded({extended: true}));

#Create a post route in app.js //This are from html form input field name value
app.post("/", function(req,res){
  var firstName = req.body.fName;
  var lastName = req.body.lName;
  var email = req.body.email;
})































